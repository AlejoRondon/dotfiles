#!/bin/bash

#
# Enable other standard keyboards along a connected TypeMatrix.
#
# Beware: the typematrix needs to be re-activated after in order to not be overridden.
#

set -euo pipefail

function usage() {
  local SCRIPT
  SCRIPT="$(basename "$0")"
  echo "Usage: $SCRIPT layout"
  echo "Example: $SCRIPT fr"
}

function toggle() {
  local LAYOUT="$1"

  readonly TYPEMATRIX_KEYBOARDS=$(xinput list |
    grep keyboard |
    grep TypeMatrix |
    sed 's/.*id=\([0-9]*\).*/\1/')

  readonly OTHER_KEYBOARDS=$(xinput list |
    grep -i 'keyboard.*id=.*slave.*keyboard' |
    grep -vE '(TypeMatrix|XTEST|AT Translated)' |
    sed 's/.*id=\([0-9]*\).*/\1/')

  if [[ -n "$OTHER_KEYBOARDS" ]]; then
    for keyboard in $OTHER_KEYBOARDS; do
      setxkbmap -device "$keyboard" "$LAYOUT" -option ""
    done
    notify-send -i "input-keyboard" "Success" "Other keyboard configured as $LAYOUT"
  else
    notify-send -i "error" "Error" "Other keyboard NOT CONFIGURED"
  fi

  if [[ -n "$TYPEMATRIX_KEYBOARDS" ]]; then
    for keyboard in $TYPEMATRIX_KEYBOARDS; do
      setxkbmap -device "$keyboard" us -variant colemak
    done
    notify-send -i "input-keyboard" "Success" "Typematrix keyboard configured"
  else
    notify-send -i "error" "Error" "Typematrix keyboard NOT CONFIGURED"
  fi
}

set +u
if [ -z "$1" ]; then
  echo "Missing layout param"
  usage
  exit 1
else
  toggle "$1"
fi
set -u

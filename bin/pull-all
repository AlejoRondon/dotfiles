#!/bin/bash

set -euo pipefail

readonly BASE_DIR="${1-$(pwd)}"
readonly TARGET_BRANCH="${2-}"

# Required to handle a potential empty $BASE_DIR
shopt -s nullglob

function pull {
  local -r CURRENT_DIR=$1
  local -r CHECKOUT_BRANCH=$2

  if [ -d .git ]; then
    if git config remote.origin.url > /dev/null; then
      local -r CURRENT_BRANCH="$(git symbolic-ref -q --short HEAD || echo 'detached')"

      echo "$(tput bold)Pulling $CURRENT_DIR$(tput sgr0)"

      if [ "$CURRENT_BRANCH" == "detached" ]; then
        echo "  $(tput bold)$(tput setaf 3)> Skipped: detached HEAD$(tput sgr0)"
      elif ! git branch | grep -q "$CHECKOUT_BRANCH"; then
        echo "  $(tput bold)$(tput setaf 3)> Skipped: branch $CHECKOUT_BRANCH missing$(tput sgr0)"
      else
        if [ ! -z "$CHECKOUT_BRANCH" ] && [ "$CURRENT_BRANCH" != "$CHECKOUT_BRANCH" ]; then
          git checkout "$CHECKOUT_BRANCH"
          echo "  $(tput bold)> Switched to branch $CHECKOUT_BRANCH$(tput sgr0)"
        fi

        local -r BRANCH="${CHECKOUT_BRANCH:-$CURRENT_BRANCH}"
        echo "  $(tput bold)$(tput setaf 2)> Pulling branch $BRANCH$(tput sgr0)"
        set +e
        git pull
        set -e
      fi
    fi
  fi
}

(
  cd "$BASE_DIR"
  for d in */ ; do
  (
    cd "$d"
    pull "${d%/}" "$TARGET_BRANCH"
  )
  done
)

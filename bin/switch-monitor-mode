#!/usr/bin/env bash

set -euo pipefail

readonly SCRIPT_NAME="$(basename "$0")"
readonly PROG_DIR=$(readlink -m "$(dirname "$0")")
readonly MODE_ARG="${1:-laptop}"

readonly MONITOR_LAPTOP=eDP1
readonly MONITOR_HDMI=HDMI2
readonly MONITOR_DP=DP1

function setXorgDpi() {
  local -r DPI="$1"
  echo "Set Xorg DPI to $DPI"
  xfconf-query -c xsettings -p '/Xft/DPI' -s "$DPI"
  echo "...done"
}

function setXfcePanelSize() {
  local -r SIZE="$1"
  echo "Set Panel size to $SIZE"
  xfconf-query -c xfce4-panel -p '/panels/panel-0/size' -s "$SIZE"
  echo "...done"
}

function setXfceCursorSize() {
  local -r SIZE="$1"
  echo "Set Cursor size to $SIZE"
  xfconf-query -c xsettings -p '/Gtk/CursorThemeSize' -s "$SIZE"
  echo "...done"
}

function setFirefoxDpi() {
  local -r DPI="$1"
  echo "Set Firefox DPI to $DPI"
  local -r profileDir="$(find ~/.mozilla/firefox -name '*.default')"
  changeMozillaProductDpi "$profileDir" "$DPI"
  echo "...done"
}

function setFirefoxDeveloperDpi() {
  local -r DPI="$1"
  echo "Set Firefox Developer DPI to $DPI"
  local -r profileDir="$(find ~/.mozilla/firefox -name '*.dev-edition-default')"
  echo "$profileDir"
  changeMozillaProductDpi "$profileDir" "$DPI"
  echo "...done"
}

function setThunderbirdDpi() {
  local -r DPI="$1"
  echo "Set Thunderbird DPI to $DPI"
  local -r profileDir="$(find ~/.thunderbird -name '*.default')"
  changeMozillaProductDpi "$profileDir" "$DPI"
  echo "...done"
}

function changeMozillaProductDpi() {
  local -r MOZILLA_PRODUCT_DIR="$1"
  local -r DPI="$2"
  local -r userFile="$MOZILLA_PRODUCT_DIR/user.js"
  if [[ -f "$userFile" ]]; then
    sed -ri "s|^(user_pref\(\"layout.css.devPixelsPerPx\", \")-?[0-9]*\.?[0-9]+(\"\);)|\1$DPI\2|g" "$userFile"
  else
    echo "user_pref(\"layout.css.devPixelsPerPx\", \"$DPI\");" >"$userFile"
  fi
}

function disableAllMonitorsExceptLaptop() {
  echo "Disabling all monitors except Laptop"
  xrandr \
    --output "$MONITOR_HDMI" --off \
    --output "$MONITOR_DP" --off \
    --output "$MONITOR_LAPTOP" --auto --primary
  echo "...done"
}

function enableDualLowDpiMonitors() {
  echo "Setup position of the two external screens..."
  xrandr \
    --output "$MONITOR_HDMI" --right-of "$MONITOR_DP" --auto \
    --output "$MONITOR_DP" --right-of "$MONITOR_LAPTOP" --auto --primary \
    --output "$MONITOR_LAPTOP" --off
  echo "...done"
}

function configureLaptop() {
  disableAllMonitorsExceptLaptop
  setXorgDpi 128
  setXfcePanelSize 36
  setXfceCursorSize 36
  setFirefoxDpi "1.5"
  setFirefoxDeveloperDpi "1.5"
  setThunderbirdDpi "1.5"
}

function configureDualMonitors() {
  enableDualLowDpiMonitors
  setXorgDpi 96
  setXfcePanelSize 26
  setXfceCursorSize 26
  setFirefoxDpi "-1"
  setFirefoxDeveloperDpi "-1"
  setThunderbirdDpi "-1"
}

function areDualMonitorPlugged() {
  local -r DP_STATUS=$(</sys/class/drm/card0-DP-1/status)
  local -r HDMI_STATUS=$(</sys/class/drm/card0-HDMI-A-2/status)

  if [[ 'connected' == "$DP_STATUS" && 'connected' == "$HDMI_STATUS" ]]; then
    return 0
  fi

  return 1
}

function switchMode() {
  local -r MODE="$1"
  if [[ $MODE == 'laptop' ]]; then
    configureLaptop
    notifySuccess "Laptop configured"
  else
    if areDualMonitorPlugged; then
      configureDualMonitors
      notifySuccess "External monitors configured"
    else
      notifyFailure "External monitors does not seems to be plugged in"
    fi
  fi
}

function notifySuccess() {
  local -r MSG="$1"
  /usr/bin/notify-send -i monitor "$SCRIPT_NAME" "$MSG"
}

function notifyFailure() {
  local -r MSG="$1"
  /usr/bin/notify-send --icon="${PROG_DIR}/failure.png" "$SCRIPT_NAME" "$MSG"
}

if [[ "$MODE_ARG" != "laptop" && "$MODE_ARG" != "external" ]]; then
  echo "Invalid mode: $1"
  # TODO usage
  exit 1
else
  echo "Switching to mode: $MODE_ARG..."
  switchMode "$MODE_ARG"
  echo "Switched to $MODE_ARG"
fi
